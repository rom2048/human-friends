{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","phone","website","className","alt","src","CardList","humans","cardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","App","state","fetch","then","response","json","users","setState","filtredHumans","this","filter","human","toLowerCase","includes","length","onSearchChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAgBeA,EAdF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtC,OACE,sBAAKC,UAAU,2DAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BP,EAA1B,4BACpB,gCACE,6BAAKC,IACL,4BAAIC,IACJ,4BAAIC,IACJ,4BAAIC,WCWGI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OAAO,cAAC,EAAD,CAELb,GAAIS,EAAOI,GAAGb,GACdC,KAAMQ,EAAOI,GAAGZ,KAChBC,MAAOO,EAAOI,GAAGX,MACjBC,MAAOM,EAAOI,GAAGV,MACjBC,QAASK,EAAOI,GAAGT,SALdS,MAQT,OACE,8BACGH,KCDQI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,G,MARA,SAACC,GACd,OACE,qBAAKhB,UAAU,aAAf,SACGgB,EAAMC,aC2CEC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXf,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAElBU,MAAM,8CACHC,MAAM,SAAAC,GACL,OAAOA,EAASC,UAEjBF,MAAM,SAAAG,GACL,EAAKC,SAAS,CAAErB,OAAQoB,S,oBAS9B,WAAU,IAAD,OACDE,EAAgBC,KAAKR,MAAMf,OAAOwB,QAAO,SAAAC,GAC7C,OAAOA,EAAMjC,KAAKkC,cAAcC,SAAS,EAAKZ,MAAMT,YAAYoB,kBAElE,OAAQH,KAAKR,MAAMf,OAAO4B,OAGtB,sBAAKhC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKM,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAU7B,OAAQsB,SANxB,6C,GA9BYQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.879f391c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email, phone, website }) => {\r\n  return (\r\n    <div className=\"tc grow bg-light-purple br2 shadow-3 ma3 pa3 br3 bw2 dib\">\r\n      <img alt='human' src={`https://robohash.org/${id}?set=set5&size=150x150`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        <p>{phone}</p>\r\n        <p>{website}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst CardList = ({ humans }) => {\r\n  const cardArray = humans.map((user, i) => {\r\n    return <Card \r\n      key={i}\r\n      id={humans[i].id}\r\n      name={humans[i].name}\r\n      email={humans[i].email}\r\n      phone={humans[i].phone}\r\n      website={humans[i].website}\r\n      />\r\n  });\r\n  return (\r\n    <div>\r\n      {cardArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--black bg-light-purple'\r\n        type='search'\r\n        placeholder='search humans'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll-box\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList/CardList';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport Scroll from '../components/Scroll/Scroll';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      humans: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then( response => {\r\n        return response.json()\r\n      })\r\n      .then( users => {\r\n        this.setState({ humans: users })\r\n      })\r\n    // async function fetchUsers() {\r\n    //   const response = await fetch('https://jsonplaceholder.typicode.com/users')\r\n    //   const data = await response.json()\r\n    //   this.setState({humans: data})\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    const filtredHumans = this.state.humans.filter(human => {\r\n      return human.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    return !this.state.humans.length ? \r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>Humans</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList humans={filtredHumans}/>\r\n          </Scroll>\r\n        </div>    \r\n      );  \r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}